(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("classnames"), require("@material/react-ripple/dist/index.js"), require("@material/checkbox/dist/mdc.checkbox.js"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "classnames", "@material/react-ripple/dist/index.js", "@material/checkbox/dist/mdc.checkbox.js"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("react"), require("classnames"), require("@material/react-ripple/dist/index.js"), require("@material/checkbox/dist/mdc.checkbox.js")) : factory(root["react"], root["classnames"], root["@material/react-ripple/dist/index.js"], root["@material/checkbox/dist/mdc.checkbox.js"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_22__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 21);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),

/***/ 21:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// The MIT License
//
// Copyright (c) 2018 Google, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(0);
var classnames_1 = __webpack_require__(1);
// @ts-ignore no mdc .d.ts file
var mdc_checkbox_1 = __webpack_require__(22);
var Ripple = __webpack_require__(2);
var NativeControl_1 = __webpack_require__(23);
;
;
var Checkbox = /** @class */ (function (_super) {
    __extends(Checkbox, _super);
    function Checkbox(props) {
        var _this = _super.call(this, props) || this;
        _this.inputElement = React.createRef();
        _this.foundation = mdc_checkbox_1.MDCCheckboxFoundation;
        _this.init = function (el) {
            if (!_this.inputElement.current)
                return;
            _this.props.initRipple(el, _this.inputElement.current);
        };
        _this.handleChange = function (checked, indeterminate) {
            _this.setState({ checked: checked, indeterminate: indeterminate }, function () {
                _this.foundation.handleChange();
                if (_this.inputElement.current) {
                    _this.inputElement.current.indeterminate = indeterminate;
                }
            });
        };
        _this.updateState = function (key, value) {
            _this.setState(function (prevState) {
                var _a;
                return (__assign({}, prevState, (_a = {}, _a[key] = value, _a)));
            });
        };
        _this.removeState = function (key) { return _this.updateState(key, false); };
        _this.onChange = function (evt) {
            var onChange = _this.props.onChange;
            var _a = evt.target, checked = _a.checked, indeterminate = _a.indeterminate;
            _this.handleChange(checked, indeterminate);
            onChange(evt);
        };
        _this.state = {
            'checked': props.checked,
            'indeterminate': props.indeterminate,
            'classList': new Set(),
            'aria-checked': false,
        };
        return _this;
    }
    Checkbox.prototype.componentDidMount = function () {
        this.foundation = new mdc_checkbox_1.MDCCheckboxFoundation(this.adapter);
        this.foundation.init();
        this.foundation.setDisabled(this.props.disabled);
        // indeterminate property on checkboxes is not supported:
        // https://github.com/facebook/react/issues/1798#issuecomment-333414857
        if (this.inputElement.current) {
            this.inputElement.current.indeterminate = this.state.indeterminate;
        }
    };
    Checkbox.prototype.componentDidUpdate = function (prevProps) {
        var _a = this.props, checked = _a.checked, indeterminate = _a.indeterminate, disabled = _a.disabled;
        if (checked !== prevProps.checked ||
            indeterminate !== prevProps.indeterminate) {
            this.handleChange(checked, indeterminate);
        }
        if (disabled !== prevProps.disabled) {
            this.foundation.setDisabled(disabled);
        }
    };
    Checkbox.prototype.componentWillUnmount = function () {
        if (this.foundation) {
            this.foundation.destroy();
        }
    };
    Object.defineProperty(Checkbox.prototype, "classes", {
        get: function () {
            var classList = this.state.classList;
            var className = this.props.className;
            return classnames_1.default('mdc-checkbox', Array.from(classList), className);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Checkbox.prototype, "adapter", {
        get: function () {
            var _this = this;
            return {
                addClass: function (className) {
                    var classList = _this.state.classList;
                    classList.add(className);
                    _this.setState({ classList: classList });
                },
                removeClass: function (className) {
                    var classList = _this.state.classList;
                    classList.delete(className);
                    _this.setState({ classList: classList });
                },
                hasNativeControl: function () { return true; },
                // isAttachedToDOM will likely be removed
                // https://github.com/material-components/material-components-web/issues/3691
                isAttachedToDOM: function () { return true; },
                isChecked: function () { return _this.state.checked; },
                isIndeterminate: function () { return _this.state.indeterminate; },
                setNativeControlAttr: this.updateState,
                removeNativeControlAttr: this.removeState,
            };
        },
        enumerable: true,
        configurable: true
    });
    Checkbox.prototype.render = function () {
        var _this = this;
        var _a = this.props, 
        /* eslint-disable no-unused-vars */
        className = _a.className, checked = _a.checked, indeterminate = _a.indeterminate, initRipple = _a.initRipple, onChange = _a.onChange, unbounded = _a.unbounded, 
        /* eslint-enable no-unused-vars */
        disabled = _a.disabled, nativeControlId = _a.nativeControlId, name = _a.name, otherProps = __rest(_a, ["className", "checked", "indeterminate", "initRipple", "onChange", "unbounded", "disabled", "nativeControlId", "name"]);
        return (React.createElement("div", __assign({ className: this.classes, onAnimationEnd: function () { return _this.foundation.handleAnimationEnd(); }, ref: this.init }, otherProps),
            React.createElement(NativeControl_1.default, { id: nativeControlId, checked: this.state.checked, disabled: disabled, "aria-checked": this.state['aria-checked'], name: name, onChange: this.onChange, rippleActivatorRef: this.inputElement }),
            React.createElement("div", { className: 'mdc-checkbox__background' },
                React.createElement("svg", { className: 'mdc-checkbox__checkmark', viewBox: '0 0 24 24', focusable: 'false' },
                    React.createElement("path", { className: 'mdc-checkbox__checkmark-path', fill: 'none', d: 'M1.73,12.91 8.1,19.28 22.79,4.59' })),
                React.createElement("div", { className: 'mdc-checkbox__mixedmark' }))));
    };
    Checkbox.defaultProps = {
        checked: false,
        className: '',
        disabled: false,
        indeterminate: false,
        onChange: function () { },
        unbounded: true,
    };
    return Checkbox;
}(React.Component));
exports.Checkbox = Checkbox;
exports.default = Ripple.withRipple(Checkbox);


/***/ }),

/***/ 22:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_22__;

/***/ }),

/***/ 23:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
// The MIT License
//
// Copyright (c) 2018 Google, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
var React = __webpack_require__(0);
;
var NativeControl = /** @class */ (function (_super) {
    __extends(NativeControl, _super);
    function NativeControl() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NativeControl.prototype.render = function () {
        var _a = this.props, rippleActivatorRef = _a.rippleActivatorRef, otherProps = __rest(_a, ["rippleActivatorRef"]);
        return (React.createElement("input", __assign({ type: 'checkbox', className: 'mdc-checkbox__native-control', ref: rippleActivatorRef }, otherProps)));
    };
    NativeControl.defaultProps = {
        checked: false,
        disabled: false,
        onChange: function () { },
    };
    return NativeControl;
}(React.Component));
exports.NativeControl = NativeControl;
exports.default = NativeControl;


/***/ })

/******/ });
});
//# sourceMappingURL=checkbox.js.map